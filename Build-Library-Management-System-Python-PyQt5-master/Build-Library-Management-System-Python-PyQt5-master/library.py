# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'library.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import pymysql
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QMessageBox
from xlsxwriter import *
from Userbean import Userbean


class Ui_MainWindow(QMainWindow):
    def __init__(self, uname):
        super(Ui_MainWindow, self).__init__()
        self.user = Userbean(uname)
        self.setupUi(self)
        self.retranslateUi(self)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(591, 446)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget_main = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_main.setGeometry(QtCore.QRect(0, 0, 591, 411))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        font.setPointSize(7)
        self.tabWidget_main.setFont(font)
        self.tabWidget_main.setObjectName("tabWidget_main")
        self.tab_basic = QtWidgets.QWidget()
        self.tab_basic.setObjectName("tab_basic")
        self.tabWidget_5 = QtWidgets.QTabWidget(self.tab_basic)
        self.tabWidget_5.setGeometry(QtCore.QRect(0, 0, 591, 391))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.tabWidget_5.setFont(font)
        self.tabWidget_5.setObjectName("tabWidget_5")
        self.tab_self = QtWidgets.QWidget()
        self.tab_self.setObjectName("tab_self")
        self.lineEdit_self_password = QtWidgets.QLineEdit(self.tab_self)
        self.lineEdit_self_password.setGeometry(QtCore.QRect(270, 70, 113, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.lineEdit_self_password.setFont(font)
        self.lineEdit_self_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_self_password.setObjectName("lineEdit_self_password")
        self.label_38 = QtWidgets.QLabel(self.tab_self)
        self.label_38.setGeometry(QtCore.QRect(200, 40, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_38.setFont(font)
        self.label_38.setObjectName("label_38")
        self.label_39 = QtWidgets.QLabel(self.tab_self)
        self.label_39.setGeometry(QtCore.QRect(200, 70, 41, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_39.setFont(font)
        self.label_39.setObjectName("label_39")
        self.label_40 = QtWidgets.QLabel(self.tab_self)
        self.label_40.setGeometry(QtCore.QRect(200, 100, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_40.setFont(font)
        self.label_40.setObjectName("label_40")
        self.lineEdit_self_password_2 = QtWidgets.QLineEdit(self.tab_self)
        self.lineEdit_self_password_2.setGeometry(QtCore.QRect(270, 100, 113, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.lineEdit_self_password_2.setFont(font)
        self.lineEdit_self_password_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_self_password_2.setObjectName("lineEdit_self_password_2")
        self.label_53 = QtWidgets.QLabel(self.tab_self)
        self.label_53.setGeometry(QtCore.QRect(200, 130, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_53.setFont(font)
        self.label_53.setObjectName("label_53")
        self.label_54 = QtWidgets.QLabel(self.tab_self)
        self.label_54.setGeometry(QtCore.QRect(200, 190, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_54.setFont(font)
        self.label_54.setObjectName("label_54")
        self.comboBox_self_school = QtWidgets.QComboBox(self.tab_self)
        self.comboBox_self_school.setGeometry(QtCore.QRect(270, 190, 111, 22))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.comboBox_self_school.setFont(font)
        self.comboBox_self_school.setObjectName("comboBox_self_school")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.comboBox_self_school.addItem("")
        self.label_55 = QtWidgets.QLabel(self.tab_self)
        self.label_55.setGeometry(QtCore.QRect(200, 220, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_55.setFont(font)
        self.label_55.setObjectName("label_55")
        self.comboBox_self_position = QtWidgets.QComboBox(self.tab_self)
        self.comboBox_self_position.setGeometry(QtCore.QRect(270, 220, 111, 22))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.comboBox_self_position.setFont(font)
        self.comboBox_self_position.setObjectName("comboBox_self_position")
        self.comboBox_self_position.addItem("")
        self.comboBox_self_position.addItem("")
        self.comboBox_self_position.addItem("")
        self.comboBox_self_position.addItem("")
        self.comboBox_self_position.addItem("")
        self.comboBox_self_position.addItem("")
        self.comboBox_self_position.addItem("")
        self.pushButton_self_update = QtWidgets.QPushButton(self.tab_self)
        self.pushButton_self_update.setGeometry(QtCore.QRect(260, 270, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.pushButton_self_update.setFont(font)
        self.pushButton_self_update.setObjectName("pushButton_self_update")
        self.label_self_level = QtWidgets.QLabel(self.tab_self)
        self.label_self_level.setGeometry(QtCore.QRect(270, 130, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_self_level.setFont(font)
        self.label_self_level.setObjectName("label_self_level")
        self.lineEdit_self_name = QtWidgets.QLineEdit(self.tab_self)
        self.lineEdit_self_name.setGeometry(QtCore.QRect(270, 160, 113, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.lineEdit_self_name.setFont(font)
        self.lineEdit_self_name.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_self_name.setObjectName("lineEdit_self_name")
        self.label_41 = QtWidgets.QLabel(self.tab_self)
        self.label_41.setGeometry(QtCore.QRect(200, 160, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_41.setFont(font)
        self.label_41.setObjectName("label_41")
        self.label_self_username = QtWidgets.QLabel(self.tab_self)
        self.label_self_username.setGeometry(QtCore.QRect(270, 40, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.label_self_username.setFont(font)
        self.label_self_username.setObjectName("label_self_username")
        self.tabWidget_5.addTab(self.tab_self, "")
        self.tab_users = QtWidgets.QWidget()
        self.tab_users.setObjectName("tab_users")
        self.tableWidget_users = QtWidgets.QTableWidget(self.tab_users)
        self.tableWidget_users.setGeometry(QtCore.QRect(20, 20, 241, 281))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.tableWidget_users.setFont(font)
        self.tableWidget_users.setObjectName("tableWidget_users")
        self.tableWidget_users.setColumnCount(3)
        self.tableWidget_users.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_users.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_users.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_users.setHorizontalHeaderItem(2, item)
        self.groupBox_2 = QtWidgets.QGroupBox(self.tab_users)
        self.groupBox_2.setGeometry(QtCore.QRect(300, 220, 201, 81))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.pushButton_user_del = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_user_del.setGeometry(QtCore.QRect(20, 50, 71, 21))
        self.pushButton_user_del.setObjectName("pushButton_user_del")
        self.pushButton_user_xls = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_user_xls.setGeometry(QtCore.QRect(110, 50, 71, 21))
        self.pushButton_user_xls.setObjectName("pushButton_user_xls")
        self.pushButton_user_reflesh = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_user_reflesh.setGeometry(QtCore.QRect(20, 20, 71, 21))
        self.pushButton_user_reflesh.setObjectName("pushButton_user_reflesh")
        self.pushButton_user_mod = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton_user_mod.setGeometry(QtCore.QRect(110, 20, 71, 21))
        self.pushButton_user_mod.setObjectName("pushButton_user_mod")
        self.groupBox_3 = QtWidgets.QGroupBox(self.tab_users)
        self.groupBox_3.setGeometry(QtCore.QRect(300, 20, 201, 171))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_19 = QtWidgets.QLabel(self.groupBox_3)
        self.label_19.setGeometry(QtCore.QRect(10, 110, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.label_16 = QtWidgets.QLabel(self.groupBox_3)
        self.label_16.setGeometry(QtCore.QRect(10, 20, 41, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.pushButton_user_create = QtWidgets.QPushButton(self.groupBox_3)
        self.pushButton_user_create.setGeometry(QtCore.QRect(70, 140, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.pushButton_user_create.setFont(font)
        self.pushButton_user_create.setObjectName("pushButton_user_create")
        self.label_18 = QtWidgets.QLabel(self.groupBox_3)
        self.label_18.setGeometry(QtCore.QRect(10, 80, 71, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.lineEdit_user_password_2 = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_user_password_2.setGeometry(QtCore.QRect(80, 80, 113, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_user_password_2.setFont(font)
        self.lineEdit_user_password_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_user_password_2.setObjectName("lineEdit_user_password_2")
        self.comboBox_user_authority = QtWidgets.QComboBox(self.groupBox_3)
        self.comboBox_user_authority.setGeometry(QtCore.QRect(80, 110, 111, 22))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.comboBox_user_authority.setFont(font)
        self.comboBox_user_authority.setObjectName("comboBox_user_authority")
        self.comboBox_user_authority.addItem("")
        self.comboBox_user_authority.addItem("")
        self.lineEdit_user_username = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_user_username.setGeometry(QtCore.QRect(80, 20, 113, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_user_username.setFont(font)
        self.lineEdit_user_username.setObjectName("lineEdit_user_username")
        self.label_17 = QtWidgets.QLabel(self.groupBox_3)
        self.label_17.setGeometry(QtCore.QRect(10, 50, 41, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.label_17.setFont(font)
        self.label_17.setObjectName("label_17")
        self.lineEdit_user_password = QtWidgets.QLineEdit(self.groupBox_3)
        self.lineEdit_user_password.setGeometry(QtCore.QRect(80, 50, 113, 20))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.lineEdit_user_password.setFont(font)
        self.lineEdit_user_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_user_password.setObjectName("lineEdit_user_password")
        self.tabWidget_5.addTab(self.tab_users, "")
        self.tabWidget_main.addTab(self.tab_basic, "")
        self.tab_proj = QtWidgets.QWidget()
        self.tab_proj.setObjectName("tab_proj")
        self.tabWidget_4 = QtWidgets.QTabWidget(self.tab_proj)
        self.tabWidget_4.setGeometry(QtCore.QRect(0, 0, 591, 391))
        self.tabWidget_4.setObjectName("tabWidget_4")
        self.tab_projview = QtWidgets.QWidget()
        self.tab_projview.setObjectName("tab_projview")
        self.tableWidget_proj = QtWidgets.QTableWidget(self.tab_projview)
        self.tableWidget_proj.setGeometry(QtCore.QRect(0, 0, 491, 361))
        self.tableWidget_proj.setObjectName("tableWidget_proj")
        self.tableWidget_proj.setColumnCount(17)
        self.tableWidget_proj.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj.setHorizontalHeaderItem(16, item)
        self.pushButton_proj_del = QtWidgets.QPushButton(self.tab_projview)
        self.pushButton_proj_del.setGeometry(QtCore.QRect(510, 10, 56, 21))
        self.pushButton_proj_del.setObjectName("pushButton_proj_del")
        self.pushButton_proj_xls = QtWidgets.QPushButton(self.tab_projview)
        self.pushButton_proj_xls.setGeometry(QtCore.QRect(510, 70, 56, 21))
        self.pushButton_proj_xls.setObjectName("pushButton_proj_xls")
        self.pushButton_proj_mod = QtWidgets.QPushButton(self.tab_projview)
        self.pushButton_proj_mod.setGeometry(QtCore.QRect(510, 40, 56, 21))
        self.pushButton_proj_mod.setObjectName("pushButton_proj_mod")
        self.pushButton_proj_reflesh = QtWidgets.QPushButton(self.tab_projview)
        self.pushButton_proj_reflesh.setGeometry(QtCore.QRect(510, 100, 56, 21))
        self.pushButton_proj_reflesh.setObjectName("pushButton_proj_reflesh")
        self.tabWidget_4.addTab(self.tab_projview, "")
        self.tab_projadd = QtWidgets.QWidget()
        self.tab_projadd.setObjectName("tab_projadd")
        self.groupBox_5 = QtWidgets.QGroupBox(self.tab_projadd)
        self.groupBox_5.setGeometry(QtCore.QRect(10, 10, 221, 171))
        self.groupBox_5.setObjectName("groupBox_5")
        self.label_20 = QtWidgets.QLabel(self.groupBox_5)
        self.label_20.setGeometry(QtCore.QRect(10, 20, 41, 21))
        self.label_20.setObjectName("label_20")
        self.lineEdit_proj_name = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_proj_name.setGeometry(QtCore.QRect(60, 20, 151, 20))
        self.lineEdit_proj_name.setObjectName("lineEdit_proj_name")
        self.label_21 = QtWidgets.QLabel(self.groupBox_5)
        self.label_21.setGeometry(QtCore.QRect(10, 80, 41, 21))
        self.label_21.setObjectName("label_21")
        self.comboBox_proj_type = QtWidgets.QComboBox(self.groupBox_5)
        self.comboBox_proj_type.setGeometry(QtCore.QRect(60, 80, 151, 22))
        self.comboBox_proj_type.setObjectName("comboBox_proj_type")
        self.comboBox_proj_type.addItem("")
        self.comboBox_proj_type.addItem("")
        self.comboBox_proj_type.addItem("")
        self.comboBox_proj_type.addItem("")
        self.comboBox_proj_type.addItem("")
        self.label_22 = QtWidgets.QLabel(self.groupBox_5)
        self.label_22.setGeometry(QtCore.QRect(10, 110, 41, 21))
        self.label_22.setObjectName("label_22")
        self.lineEdit_proj_fund = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_proj_fund.setGeometry(QtCore.QRect(60, 110, 151, 20))
        self.lineEdit_proj_fund.setObjectName("lineEdit_proj_fund")
        self.label_23 = QtWidgets.QLabel(self.groupBox_5)
        self.label_23.setGeometry(QtCore.QRect(10, 50, 41, 21))
        self.label_23.setObjectName("label_23")
        self.lineEdit_proj_id = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_proj_id.setGeometry(QtCore.QRect(60, 50, 151, 20))
        self.lineEdit_proj_id.setObjectName("lineEdit_proj_id")
        self.label_24 = QtWidgets.QLabel(self.groupBox_5)
        self.label_24.setGeometry(QtCore.QRect(10, 140, 41, 21))
        self.label_24.setObjectName("label_24")
        self.dateEdit_proj_end = QtWidgets.QDateEdit(self.groupBox_5)
        self.dateEdit_proj_end.setGeometry(QtCore.QRect(150, 140, 61, 22))
        self.dateEdit_proj_end.setObjectName("dateEdit_proj_end")
        self.dateEdit_proj_start = QtWidgets.QDateEdit(self.groupBox_5)
        self.dateEdit_proj_start.setGeometry(QtCore.QRect(60, 140, 61, 22))
        self.dateEdit_proj_start.setObjectName("dateEdit_proj_start")
        self.label_25 = QtWidgets.QLabel(self.groupBox_5)
        self.label_25.setGeometry(QtCore.QRect(130, 140, 21, 21))
        self.label_25.setObjectName("label_25")
        self.groupBox_6 = QtWidgets.QGroupBox(self.tab_projadd)
        self.groupBox_6.setGeometry(QtCore.QRect(250, 10, 221, 171))
        self.groupBox_6.setObjectName("groupBox_6")
        self.label_29 = QtWidgets.QLabel(self.groupBox_6)
        self.label_29.setGeometry(QtCore.QRect(10, 20, 41, 21))
        self.label_29.setObjectName("label_29")
        self.lineEdit_proj_contdep = QtWidgets.QLineEdit(self.groupBox_6)
        self.lineEdit_proj_contdep.setGeometry(QtCore.QRect(60, 20, 151, 20))
        self.lineEdit_proj_contdep.setObjectName("lineEdit_proj_contdep")
        self.label_30 = QtWidgets.QLabel(self.groupBox_6)
        self.label_30.setGeometry(QtCore.QRect(10, 50, 41, 21))
        self.label_30.setObjectName("label_30")
        self.label_31 = QtWidgets.QLabel(self.groupBox_6)
        self.label_31.setGeometry(QtCore.QRect(10, 80, 41, 21))
        self.label_31.setObjectName("label_31")
        self.lineEdit_proj_contfund = QtWidgets.QLineEdit(self.groupBox_6)
        self.lineEdit_proj_contfund.setGeometry(QtCore.QRect(60, 80, 151, 20))
        self.lineEdit_proj_contfund.setObjectName("lineEdit_proj_contfund")
        self.label_32 = QtWidgets.QLabel(self.groupBox_6)
        self.label_32.setGeometry(QtCore.QRect(10, 140, 41, 21))
        self.label_32.setObjectName("label_32")
        self.dateEdit_proj_contstart = QtWidgets.QDateEdit(self.groupBox_6)
        self.dateEdit_proj_contstart.setGeometry(QtCore.QRect(60, 140, 61, 22))
        self.dateEdit_proj_contstart.setObjectName("dateEdit_proj_contstart")
        self.dateEdit_proj_contend = QtWidgets.QDateEdit(self.groupBox_6)
        self.dateEdit_proj_contend.setGeometry(QtCore.QRect(150, 140, 61, 22))
        self.dateEdit_proj_contend.setObjectName("dateEdit_proj_contend")
        self.label_33 = QtWidgets.QLabel(self.groupBox_6)
        self.label_33.setGeometry(QtCore.QRect(130, 140, 21, 21))
        self.label_33.setObjectName("label_33")
        self.lineEdit_proj_contid = QtWidgets.QLineEdit(self.groupBox_6)
        self.lineEdit_proj_contid.setGeometry(QtCore.QRect(60, 50, 151, 20))
        self.lineEdit_proj_contid.setObjectName("lineEdit_proj_contid")
        self.label_34 = QtWidgets.QLabel(self.groupBox_6)
        self.label_34.setGeometry(QtCore.QRect(10, 110, 41, 21))
        self.label_34.setObjectName("label_34")
        self.lineEdit_proj_equipfund = QtWidgets.QLineEdit(self.groupBox_6)
        self.lineEdit_proj_equipfund.setGeometry(QtCore.QRect(60, 110, 151, 20))
        self.lineEdit_proj_equipfund.setObjectName("lineEdit_proj_equipfund")
        self.label_35 = QtWidgets.QLabel(self.tab_projadd)
        self.label_35.setGeometry(QtCore.QRect(250, 190, 41, 16))
        self.label_35.setObjectName("label_35")
        self.textEdit_proj_intro = QtWidgets.QTextEdit(self.tab_projadd)
        self.textEdit_proj_intro.setGeometry(QtCore.QRect(250, 210, 151, 111))
        self.textEdit_proj_intro.setObjectName("textEdit_proj_intro")
        self.label_36 = QtWidgets.QLabel(self.tab_projadd)
        self.label_36.setGeometry(QtCore.QRect(420, 190, 91, 16))
        self.label_36.setObjectName("label_36")
        self.textEdit_proj_happen = QtWidgets.QTextEdit(self.tab_projadd)
        self.textEdit_proj_happen.setGeometry(QtCore.QRect(420, 210, 151, 111))
        self.textEdit_proj_happen.setObjectName("textEdit_proj_happen")
        self.pushButton_proj_addpay = QtWidgets.QPushButton(self.tab_projadd)
        self.pushButton_proj_addpay.setGeometry(QtCore.QRect(480, 20, 91, 31))
        self.pushButton_proj_addpay.setObjectName("pushButton_proj_addpay")
        self.pushButton_proj_addpar = QtWidgets.QPushButton(self.tab_projadd)
        self.pushButton_proj_addpar.setGeometry(QtCore.QRect(480, 60, 91, 31))
        self.pushButton_proj_addpar.setObjectName("pushButton_proj_addpar")
        self.pushButton_proj_add = QtWidgets.QPushButton(self.tab_projadd)
        self.pushButton_proj_add.setGeometry(QtCore.QRect(480, 100, 91, 31))
        self.pushButton_proj_add.setObjectName("pushButton_proj_add")
        self.groupBox_7 = QtWidgets.QGroupBox(self.tab_projadd)
        self.groupBox_7.setGeometry(QtCore.QRect(10, 210, 221, 111))
        self.groupBox_7.setObjectName("groupBox_7")
        self.label_46 = QtWidgets.QLabel(self.groupBox_7)
        self.label_46.setGeometry(QtCore.QRect(10, 20, 51, 21))
        self.label_46.setObjectName("label_46")
        self.lineEdit_proj_prinname = QtWidgets.QLineEdit(self.groupBox_7)
        self.lineEdit_proj_prinname.setGeometry(QtCore.QRect(70, 20, 141, 20))
        self.lineEdit_proj_prinname.setObjectName("lineEdit_proj_prinname")
        self.label_47 = QtWidgets.QLabel(self.groupBox_7)
        self.label_47.setGeometry(QtCore.QRect(10, 80, 51, 21))
        self.label_47.setObjectName("label_47")
        self.label_49 = QtWidgets.QLabel(self.groupBox_7)
        self.label_49.setGeometry(QtCore.QRect(10, 50, 51, 21))
        self.label_49.setObjectName("label_49")
        self.lineEdit_proj_prinid = QtWidgets.QLineEdit(self.groupBox_7)
        self.lineEdit_proj_prinid.setGeometry(QtCore.QRect(70, 50, 141, 20))
        self.lineEdit_proj_prinid.setObjectName("lineEdit_proj_prinid")
        self.comboBox_proj_prinsch = QtWidgets.QComboBox(self.groupBox_7)
        self.comboBox_proj_prinsch.setGeometry(QtCore.QRect(70, 80, 141, 22))
        self.comboBox_proj_prinsch.setObjectName("comboBox_proj_prinsch")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.comboBox_proj_prinsch.addItem("")
        self.tabWidget_4.addTab(self.tab_projadd, "")
        self.tab_payment = QtWidgets.QWidget()
        self.tab_payment.setObjectName("tab_payment")
        self.tableWidget_proj_payment = QtWidgets.QTableWidget(self.tab_payment)
        self.tableWidget_proj_payment.setGeometry(QtCore.QRect(10, 40, 481, 321))
        self.tableWidget_proj_payment.setObjectName("tableWidget_proj_payment")
        self.tableWidget_proj_payment.setColumnCount(2)
        self.tableWidget_proj_payment.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj_payment.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj_payment.setHorizontalHeaderItem(1, item)
        self.label_28 = QtWidgets.QLabel(self.tab_payment)
        self.label_28.setGeometry(QtCore.QRect(10, 10, 41, 21))
        self.label_28.setObjectName("label_28")
        self.lineEdit_proj_idpay = QtWidgets.QLineEdit(self.tab_payment)
        self.lineEdit_proj_idpay.setGeometry(QtCore.QRect(60, 10, 111, 20))
        self.lineEdit_proj_idpay.setObjectName("lineEdit_proj_idpay")
        self.pushButton_proj_paysearch = QtWidgets.QPushButton(self.tab_payment)
        self.pushButton_proj_paysearch.setGeometry(QtCore.QRect(180, 10, 56, 21))
        self.pushButton_proj_paysearch.setObjectName("pushButton_proj_paysearch")
        self.pushButton_proj_payadd = QtWidgets.QPushButton(self.tab_payment)
        self.pushButton_proj_payadd.setGeometry(QtCore.QRect(510, 40, 56, 21))
        self.pushButton_proj_payadd.setObjectName("pushButton_proj_payadd")
        self.pushButton_proj_payxls = QtWidgets.QPushButton(self.tab_payment)
        self.pushButton_proj_payxls.setGeometry(QtCore.QRect(510, 130, 56, 21))
        self.pushButton_proj_payxls.setObjectName("pushButton_proj_payxls")
        self.pushButton_proj_paydel = QtWidgets.QPushButton(self.tab_payment)
        self.pushButton_proj_paydel.setGeometry(QtCore.QRect(510, 100, 56, 21))
        self.pushButton_proj_paydel.setObjectName("pushButton_proj_paydel")
        self.pushButton_proj_paymod = QtWidgets.QPushButton(self.tab_payment)
        self.pushButton_proj_paymod.setGeometry(QtCore.QRect(510, 70, 56, 21))
        self.pushButton_proj_paymod.setObjectName("pushButton_proj_paymod")
        self.pushButton_proj_payreflesh = QtWidgets.QPushButton(self.tab_payment)
        self.pushButton_proj_payreflesh.setGeometry(QtCore.QRect(510, 160, 56, 21))
        self.pushButton_proj_payreflesh.setObjectName("pushButton_proj_payreflesh")
        self.tabWidget_4.addTab(self.tab_payment, "")
        self.tab_participant = QtWidgets.QWidget()
        self.tab_participant.setObjectName("tab_participant")
        self.tableWidget_proj_part = QtWidgets.QTableWidget(self.tab_participant)
        self.tableWidget_proj_part.setGeometry(QtCore.QRect(10, 40, 481, 321))
        self.tableWidget_proj_part.setObjectName("tableWidget_proj_part")
        self.tableWidget_proj_part.setColumnCount(2)
        self.tableWidget_proj_part.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj_part.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_proj_part.setHorizontalHeaderItem(1, item)
        self.pushButton_proj_partadd = QtWidgets.QPushButton(self.tab_participant)
        self.pushButton_proj_partadd.setGeometry(QtCore.QRect(510, 40, 56, 21))
        self.pushButton_proj_partadd.setObjectName("pushButton_proj_partadd")
        self.pushButton_proj_partxls = QtWidgets.QPushButton(self.tab_participant)
        self.pushButton_proj_partxls.setGeometry(QtCore.QRect(510, 130, 56, 21))
        self.pushButton_proj_partxls.setObjectName("pushButton_proj_partxls")
        self.label_37 = QtWidgets.QLabel(self.tab_participant)
        self.label_37.setGeometry(QtCore.QRect(10, 10, 41, 21))
        self.label_37.setObjectName("label_37")
        self.lineEdit_proj_idpart = QtWidgets.QLineEdit(self.tab_participant)
        self.lineEdit_proj_idpart.setGeometry(QtCore.QRect(60, 10, 111, 20))
        self.lineEdit_proj_idpart.setObjectName("lineEdit_proj_idpart")
        self.pushButton_proj_partsearch = QtWidgets.QPushButton(self.tab_participant)
        self.pushButton_proj_partsearch.setGeometry(QtCore.QRect(180, 10, 56, 21))
        self.pushButton_proj_partsearch.setObjectName("pushButton_proj_partsearch")
        self.pushButton_proj_partdel = QtWidgets.QPushButton(self.tab_participant)
        self.pushButton_proj_partdel.setGeometry(QtCore.QRect(510, 100, 56, 21))
        self.pushButton_proj_partdel.setObjectName("pushButton_proj_partdel")
        self.pushButton_proj_partmod = QtWidgets.QPushButton(self.tab_participant)
        self.pushButton_proj_partmod.setGeometry(QtCore.QRect(510, 70, 56, 21))
        self.pushButton_proj_partmod.setObjectName("pushButton_proj_partmod")
        self.pushButton_proj_partreflesh = QtWidgets.QPushButton(self.tab_participant)
        self.pushButton_proj_partreflesh.setGeometry(QtCore.QRect(510, 160, 56, 21))
        self.pushButton_proj_partreflesh.setObjectName("pushButton_proj_partreflesh")
        self.tabWidget_4.addTab(self.tab_participant, "")
        self.tabWidget_main.addTab(self.tab_proj, "")
        self.tab_paper = QtWidgets.QWidget()
        self.tab_paper.setObjectName("tab_paper")
        self.tabWidget_3 = QtWidgets.QTabWidget(self.tab_paper)
        self.tabWidget_3.setGeometry(QtCore.QRect(0, 0, 591, 391))
        self.tabWidget_3.setObjectName("tabWidget_3")
        self.tab_paperview = QtWidgets.QWidget()
        self.tab_paperview.setObjectName("tab_paperview")
        self.tableWidget_paper = QtWidgets.QTableWidget(self.tab_paperview)
        self.tableWidget_paper.setGeometry(QtCore.QRect(0, 0, 491, 361))
        self.tableWidget_paper.setObjectName("tableWidget_paper")
        self.tableWidget_paper.setColumnCount(10)
        self.tableWidget_paper.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_paper.setHorizontalHeaderItem(9, item)
        self.pushButton_paper_xls = QtWidgets.QPushButton(self.tab_paperview)
        self.pushButton_paper_xls.setGeometry(QtCore.QRect(510, 70, 56, 21))
        self.pushButton_paper_xls.setObjectName("pushButton_paper_xls")
        self.pushButton_paper_del = QtWidgets.QPushButton(self.tab_paperview)
        self.pushButton_paper_del.setGeometry(QtCore.QRect(510, 10, 56, 21))
        self.pushButton_paper_del.setObjectName("pushButton_paper_del")
        self.pushButton_paper_mod = QtWidgets.QPushButton(self.tab_paperview)
        self.pushButton_paper_mod.setGeometry(QtCore.QRect(510, 40, 56, 21))
        self.pushButton_paper_mod.setObjectName("pushButton_paper_mod")
        self.pushButton_paper_reflesh = QtWidgets.QPushButton(self.tab_paperview)
        self.pushButton_paper_reflesh.setGeometry(QtCore.QRect(510, 100, 56, 21))
        self.pushButton_paper_reflesh.setObjectName("pushButton_paper_reflesh")
        self.tabWidget_3.addTab(self.tab_paperview, "")
        self.tab_paperadd = QtWidgets.QWidget()
        self.tab_paperadd.setObjectName("tab_paperadd")
        self.pushButton_paper_add = QtWidgets.QPushButton(self.tab_paperadd)
        self.pushButton_paper_add.setGeometry(QtCore.QRect(490, 20, 81, 31))
        self.pushButton_paper_add.setObjectName("pushButton_paper_add")
        self.groupBox_9 = QtWidgets.QGroupBox(self.tab_paperadd)
        self.groupBox_9.setGeometry(QtCore.QRect(250, 10, 221, 111))
        self.groupBox_9.setObjectName("groupBox_9")
        self.label_50 = QtWidgets.QLabel(self.groupBox_9)
        self.label_50.setGeometry(QtCore.QRect(10, 20, 51, 21))
        self.label_50.setObjectName("label_50")
        self.lineEdit_paper_authname = QtWidgets.QLineEdit(self.groupBox_9)
        self.lineEdit_paper_authname.setGeometry(QtCore.QRect(60, 20, 151, 20))
        self.lineEdit_paper_authname.setObjectName("lineEdit_paper_authname")
        self.label_51 = QtWidgets.QLabel(self.groupBox_9)
        self.label_51.setGeometry(QtCore.QRect(10, 80, 51, 21))
        self.label_51.setObjectName("label_51")
        self.comboBox_paper_authsch = QtWidgets.QComboBox(self.groupBox_9)
        self.comboBox_paper_authsch.setGeometry(QtCore.QRect(60, 80, 151, 22))
        self.comboBox_paper_authsch.setObjectName("comboBox_paper_authsch")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.comboBox_paper_authsch.addItem("")
        self.label_64 = QtWidgets.QLabel(self.groupBox_9)
        self.label_64.setGeometry(QtCore.QRect(10, 50, 51, 21))
        self.label_64.setObjectName("label_64")
        self.lineEdit_paper_authid = QtWidgets.QLineEdit(self.groupBox_9)
        self.lineEdit_paper_authid.setGeometry(QtCore.QRect(60, 50, 151, 20))
        self.lineEdit_paper_authid.setObjectName("lineEdit_paper_authid")
        self.textEdit_paper_summary = QtWidgets.QTextEdit(self.tab_paperadd)
        self.textEdit_paper_summary.setGeometry(QtCore.QRect(250, 160, 221, 151))
        self.textEdit_paper_summary.setObjectName("textEdit_paper_summary")
        self.label_71 = QtWidgets.QLabel(self.tab_paperadd)
        self.label_71.setGeometry(QtCore.QRect(250, 140, 41, 16))
        self.label_71.setObjectName("label_71")
        self.groupBox_19 = QtWidgets.QGroupBox(self.tab_paperadd)
        self.groupBox_19.setGeometry(QtCore.QRect(10, 10, 221, 201))
        self.groupBox_19.setObjectName("groupBox_19")
        self.lineEdit_paper_typeid = QtWidgets.QLineEdit(self.groupBox_19)
        self.lineEdit_paper_typeid.setGeometry(QtCore.QRect(60, 170, 151, 20))
        self.lineEdit_paper_typeid.setObjectName("lineEdit_paper_typeid")
        self.label_26 = QtWidgets.QLabel(self.groupBox_19)
        self.label_26.setGeometry(QtCore.QRect(10, 20, 41, 21))
        self.label_26.setObjectName("label_26")
        self.label_65 = QtWidgets.QLabel(self.groupBox_19)
        self.label_65.setGeometry(QtCore.QRect(10, 110, 41, 21))
        self.label_65.setObjectName("label_65")
        self.lineEdit_paper_key = QtWidgets.QLineEdit(self.groupBox_19)
        self.lineEdit_paper_key.setGeometry(QtCore.QRect(60, 140, 151, 20))
        self.lineEdit_paper_key.setObjectName("lineEdit_paper_key")
        self.label_73 = QtWidgets.QLabel(self.groupBox_19)
        self.label_73.setGeometry(QtCore.QRect(10, 80, 41, 21))
        self.label_73.setObjectName("label_73")
        self.label_120 = QtWidgets.QLabel(self.groupBox_19)
        self.label_120.setGeometry(QtCore.QRect(10, 50, 41, 21))
        self.label_120.setObjectName("label_120")
        self.lineEdit_paper_title = QtWidgets.QLineEdit(self.groupBox_19)
        self.lineEdit_paper_title.setGeometry(QtCore.QRect(60, 20, 151, 20))
        self.lineEdit_paper_title.setObjectName("lineEdit_paper_title")
        self.label_27 = QtWidgets.QLabel(self.groupBox_19)
        self.label_27.setGeometry(QtCore.QRect(10, 170, 41, 21))
        self.label_27.setObjectName("label_27")
        self.comboBox_paper_subj = QtWidgets.QComboBox(self.groupBox_19)
        self.comboBox_paper_subj.setGeometry(QtCore.QRect(60, 80, 151, 22))
        self.comboBox_paper_subj.setObjectName("comboBox_paper_subj")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_subj.addItem("")
        self.comboBox_paper_type = QtWidgets.QComboBox(self.groupBox_19)
        self.comboBox_paper_type.setGeometry(QtCore.QRect(60, 50, 151, 22))
        self.comboBox_paper_type.setObjectName("comboBox_paper_type")
        self.comboBox_paper_type.addItem("")
        self.comboBox_paper_type.addItem("")
        self.comboBox_paper_type.addItem("")
        self.comboBox_paper_type.addItem("")
        self.dateEdit_paper_fin = QtWidgets.QDateEdit(self.groupBox_19)
        self.dateEdit_paper_fin.setGeometry(QtCore.QRect(60, 110, 151, 22))
        self.dateEdit_paper_fin.setObjectName("dateEdit_paper_fin")
        self.label_66 = QtWidgets.QLabel(self.groupBox_19)
        self.label_66.setGeometry(QtCore.QRect(10, 140, 71, 21))
        self.label_66.setObjectName("label_66")
        self.tabWidget_3.addTab(self.tab_paperadd, "")
        self.tabWidget_main.addTab(self.tab_paper, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 591, 18))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget_main.setCurrentIndex(0)
        self.tabWidget_5.setCurrentIndex(0)
        self.tabWidget_4.setCurrentIndex(0)
        self.tabWidget_3.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.handle()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_38.setText(_translate("MainWindow", "用户名"))
        self.label_39.setText(_translate("MainWindow", "新密码"))
        self.label_40.setText(_translate("MainWindow", "请再输入一次"))
        self.label_53.setText(_translate("MainWindow", "权限等级"))
        self.label_54.setText(_translate("MainWindow", "院系"))
        self.comboBox_self_school.setItemText(0, _translate("MainWindow", "null"))
        self.comboBox_self_school.setItemText(1, _translate("MainWindow", "中国语言文学系"))
        self.comboBox_self_school.setItemText(2, _translate("MainWindow", "历史学系"))
        self.comboBox_self_school.setItemText(3, _translate("MainWindow", "哲学系"))
        self.comboBox_self_school.setItemText(4, _translate("MainWindow", "政治学系"))
        self.comboBox_self_school.setItemText(5, _translate("MainWindow", "法学院"))
        self.comboBox_self_school.setItemText(6, _translate("MainWindow", "马克思主义学院"))
        self.comboBox_self_school.setItemText(7, _translate("MainWindow", "社会发展学院"))
        self.comboBox_self_school.setItemText(8, _translate("MainWindow", "外语学院"))
        self.comboBox_self_school.setItemText(9, _translate("MainWindow", "国际汉语文化学院"))
        self.comboBox_self_school.setItemText(10, _translate("MainWindow", "教育信息技术学系"))
        self.comboBox_self_school.setItemText(11, _translate("MainWindow", "心理与认知科学学院"))
        self.comboBox_self_school.setItemText(12, _translate("MainWindow", "特殊教育学系"))
        self.comboBox_self_school.setItemText(13, _translate("MainWindow", "教育康复学系"))
        self.comboBox_self_school.setItemText(14, _translate("MainWindow", "体育与健康学院"))
        self.comboBox_self_school.setItemText(15, _translate("MainWindow", "传播学院"))
        self.comboBox_self_school.setItemText(16, _translate("MainWindow", "美术学院"))
        self.comboBox_self_school.setItemText(17, _translate("MainWindow", "音乐学院"))
        self.comboBox_self_school.setItemText(18, _translate("MainWindow", "设计学院"))
        self.comboBox_self_school.setItemText(19, _translate("MainWindow", "数学科学学院"))
        self.comboBox_self_school.setItemText(20, _translate("MainWindow", "物理与电子科学学院"))
        self.comboBox_self_school.setItemText(21, _translate("MainWindow", "化学与分子工程学院"))
        self.comboBox_self_school.setItemText(22, _translate("MainWindow", "地理科学学院"))
        self.comboBox_self_school.setItemText(23, _translate("MainWindow", "生态与环境科学学院"))
        self.comboBox_self_school.setItemText(24, _translate("MainWindow", "城市与区域科学学院"))
        self.comboBox_self_school.setItemText(25, _translate("MainWindow", "生命科学学院"))
        self.comboBox_self_school.setItemText(26, _translate("MainWindow", "计算机科学与技术学院"))
        self.comboBox_self_school.setItemText(27, _translate("MainWindow", "通信与电子工程学院"))
        self.comboBox_self_school.setItemText(28, _translate("MainWindow", "国际关系与地区发展研究院"))
        self.comboBox_self_school.setItemText(29, _translate("MainWindow", "河口海岸科学研究院"))
        self.comboBox_self_school.setItemText(30, _translate("MainWindow", "精密光谱科学与技术国家重点实验室"))
        self.comboBox_self_school.setItemText(31, _translate("MainWindow", "教育专业学位管理中心"))
        self.comboBox_self_school.setItemText(32, _translate("MainWindow", "教育学部"))
        self.comboBox_self_school.setItemText(33, _translate("MainWindow", "教育管理学系"))
        self.comboBox_self_school.setItemText(34, _translate("MainWindow", "经济与管理学部专业学位教育中心"))
        self.comboBox_self_school.setItemText(35, _translate("MainWindow", "经济学院"))
        self.comboBox_self_school.setItemText(36, _translate("MainWindow", "工商管理学院"))
        self.comboBox_self_school.setItemText(37, _translate("MainWindow", "公共管理学院"))
        self.comboBox_self_school.setItemText(38, _translate("MainWindow", "统计学院"))
        self.comboBox_self_school.setItemText(39, _translate("MainWindow", "软件工程学院"))
        self.comboBox_self_school.setItemText(40, _translate("MainWindow", "教师教育学院"))
        self.comboBox_self_school.setItemText(41, _translate("MainWindow", "数据科学与工程学院"))
        self.comboBox_self_school.setItemText(42, _translate("MainWindow", "亚欧商学院"))
        self.comboBox_self_school.setItemText(43, _translate("MainWindow", "教育心理学系"))
        self.comboBox_self_school.setItemText(44, _translate("MainWindow", "物理与电子科学学院电子科学系"))
        self.label_55.setText(_translate("MainWindow", "职位"))
        self.comboBox_self_position.setItemText(0, _translate("MainWindow", "null"))
        self.comboBox_self_position.setItemText(1, _translate("MainWindow", "本科在读"))
        self.comboBox_self_position.setItemText(2, _translate("MainWindow", "硕士在读"))
        self.comboBox_self_position.setItemText(3, _translate("MainWindow", "博士在读"))
        self.comboBox_self_position.setItemText(4, _translate("MainWindow", "讲师"))
        self.comboBox_self_position.setItemText(5, _translate("MainWindow", "副教授"))
        self.comboBox_self_position.setItemText(6, _translate("MainWindow", "教授"))
        self.pushButton_self_update.setText(_translate("MainWindow", "更新修改"))
        self.label_self_level.setText(_translate("MainWindow", "在此处显示"))
        self.label_41.setText(_translate("MainWindow", "姓名"))
        self.label_self_username.setText(_translate("MainWindow", "在此处显示"))
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.tab_self), _translate("MainWindow", "个人信息管理"))
        item = self.tableWidget_users.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "用户名"))
        item = self.tableWidget_users.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "密码"))
        item = self.tableWidget_users.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "权限等级"))
        self.groupBox_2.setTitle(_translate("MainWindow", "表操作"))
        self.pushButton_user_del.setText(_translate("MainWindow", "删除用户"))
        self.pushButton_user_xls.setText(_translate("MainWindow", "导出到xls"))
        self.pushButton_user_reflesh.setText(_translate("MainWindow", "刷新表"))
        self.pushButton_user_mod.setText(_translate("MainWindow", "更新修改"))
        self.groupBox_3.setTitle(_translate("MainWindow", "新建用户"))
        self.label_19.setText(_translate("MainWindow", "权限等级"))
        self.label_16.setText(_translate("MainWindow", "用户名"))
        self.pushButton_user_create.setText(_translate("MainWindow", "创建用户"))
        self.label_18.setText(_translate("MainWindow", "请再输入一次"))
        self.comboBox_user_authority.setItemText(0, _translate("MainWindow", "0级(用户)"))
        self.comboBox_user_authority.setItemText(1, _translate("MainWindow", "1级(管理员)"))
        self.label_17.setText(_translate("MainWindow", "密码"))
        self.tabWidget_5.setTabText(self.tabWidget_5.indexOf(self.tab_users), _translate("MainWindow", "用户查看"))
        self.tabWidget_main.setTabText(self.tabWidget_main.indexOf(self.tab_basic), _translate("MainWindow", "基础信息管理"))
        item = self.tableWidget_proj.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "项目名称"))
        item = self.tableWidget_proj.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "项目序号"))
        item = self.tableWidget_proj.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "项目类型"))
        item = self.tableWidget_proj.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "项目经费"))
        item = self.tableWidget_proj.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "项目开始年月"))
        item = self.tableWidget_proj.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "项目截止年月"))
        item = self.tableWidget_proj.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "委托单位"))
        item = self.tableWidget_proj.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "合同编号"))
        item = self.tableWidget_proj.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "合同经费"))
        item = self.tableWidget_proj.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "设备经费"))
        item = self.tableWidget_proj.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "合同开始年月"))
        item = self.tableWidget_proj.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "合同截止年月"))
        item = self.tableWidget_proj.horizontalHeaderItem(12)
        item.setText(_translate("MainWindow", "负责人姓名"))
        item = self.tableWidget_proj.horizontalHeaderItem(13)
        item.setText(_translate("MainWindow", "负责人编号"))
        item = self.tableWidget_proj.horizontalHeaderItem(14)
        item.setText(_translate("MainWindow", "负责人部门"))
        item = self.tableWidget_proj.horizontalHeaderItem(15)
        item.setText(_translate("MainWindow", "项目简介"))
        item = self.tableWidget_proj.horizontalHeaderItem(16)
        item.setText(_translate("MainWindow", "项目完成情况简介"))
        self.pushButton_proj_del.setText(_translate("MainWindow", "删除该行"))
        self.pushButton_proj_xls.setText(_translate("MainWindow", "打印到xls"))
        self.pushButton_proj_mod.setText(_translate("MainWindow", "更新修改"))
        self.pushButton_proj_reflesh.setText(_translate("MainWindow", "刷新列表"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_projview), _translate("MainWindow", "项目一览"))
        self.groupBox_5.setTitle(_translate("MainWindow", "项目基本情况"))
        self.label_20.setText(_translate("MainWindow", "项目名称"))
        self.label_21.setText(_translate("MainWindow", "项目类型"))
        self.comboBox_proj_type.setItemText(0, _translate("MainWindow", "技术开发"))
        self.comboBox_proj_type.setItemText(1, _translate("MainWindow", "技术转让"))
        self.comboBox_proj_type.setItemText(2, _translate("MainWindow", "技术咨询"))
        self.comboBox_proj_type.setItemText(3, _translate("MainWindow", "技术服务"))
        self.comboBox_proj_type.setItemText(4, _translate("MainWindow", "其他"))
        self.label_22.setText(_translate("MainWindow", "项目经费"))
        self.label_23.setText(_translate("MainWindow", "项目序号"))
        self.label_24.setText(_translate("MainWindow", "起止年月"))
        self.label_25.setText(_translate("MainWindow", "至"))
        self.groupBox_6.setTitle(_translate("MainWindow", "合同情况"))
        self.label_29.setText(_translate("MainWindow", "委托单位"))
        self.label_30.setText(_translate("MainWindow", "合同编号"))
        self.label_31.setText(_translate("MainWindow", "合同经费"))
        self.label_32.setText(_translate("MainWindow", "起止年月"))
        self.label_33.setText(_translate("MainWindow", "至"))
        self.label_34.setText(_translate("MainWindow", "设备经费"))
        self.label_35.setText(_translate("MainWindow", "项目简介"))
        self.label_36.setText(_translate("MainWindow", "项目完成情况简介"))
        self.pushButton_proj_addpay.setText(_translate("MainWindow", "添加到款信息"))
        self.pushButton_proj_addpar.setText(_translate("MainWindow", "添加参与者信息"))
        self.pushButton_proj_add.setText(_translate("MainWindow", "添加项目"))
        self.groupBox_7.setTitle(_translate("MainWindow", "负责人情况"))
        self.label_46.setText(_translate("MainWindow", "负责人姓名"))
        self.label_47.setText(_translate("MainWindow", "负责人院系"))
        self.label_49.setText(_translate("MainWindow", "负责人编号"))
        self.comboBox_proj_prinsch.setItemText(0, _translate("MainWindow", "中国语言文学系"))
        self.comboBox_proj_prinsch.setItemText(1, _translate("MainWindow", "历史学系"))
        self.comboBox_proj_prinsch.setItemText(2, _translate("MainWindow", "哲学系"))
        self.comboBox_proj_prinsch.setItemText(3, _translate("MainWindow", "政治学系"))
        self.comboBox_proj_prinsch.setItemText(4, _translate("MainWindow", "法学院"))
        self.comboBox_proj_prinsch.setItemText(5, _translate("MainWindow", "马克思主义学院"))
        self.comboBox_proj_prinsch.setItemText(6, _translate("MainWindow", "社会发展学院"))
        self.comboBox_proj_prinsch.setItemText(7, _translate("MainWindow", "外语学院"))
        self.comboBox_proj_prinsch.setItemText(8, _translate("MainWindow", "国际汉语文化学院"))
        self.comboBox_proj_prinsch.setItemText(9, _translate("MainWindow", "教育信息技术学系"))
        self.comboBox_proj_prinsch.setItemText(10, _translate("MainWindow", "心理与认知科学学院"))
        self.comboBox_proj_prinsch.setItemText(11, _translate("MainWindow", "特殊教育学系"))
        self.comboBox_proj_prinsch.setItemText(12, _translate("MainWindow", "教育康复学系"))
        self.comboBox_proj_prinsch.setItemText(13, _translate("MainWindow", "体育与健康学院"))
        self.comboBox_proj_prinsch.setItemText(14, _translate("MainWindow", "传播学院"))
        self.comboBox_proj_prinsch.setItemText(15, _translate("MainWindow", "美术学院"))
        self.comboBox_proj_prinsch.setItemText(16, _translate("MainWindow", "音乐学院"))
        self.comboBox_proj_prinsch.setItemText(17, _translate("MainWindow", "设计学院"))
        self.comboBox_proj_prinsch.setItemText(18, _translate("MainWindow", "数学科学学院"))
        self.comboBox_proj_prinsch.setItemText(19, _translate("MainWindow", "物理与电子科学学院"))
        self.comboBox_proj_prinsch.setItemText(20, _translate("MainWindow", "化学与分子工程学院"))
        self.comboBox_proj_prinsch.setItemText(21, _translate("MainWindow", "地理科学学院"))
        self.comboBox_proj_prinsch.setItemText(22, _translate("MainWindow", "生态与环境科学学院"))
        self.comboBox_proj_prinsch.setItemText(23, _translate("MainWindow", "城市与区域科学学院"))
        self.comboBox_proj_prinsch.setItemText(24, _translate("MainWindow", "生命科学学院"))
        self.comboBox_proj_prinsch.setItemText(25, _translate("MainWindow", "计算机科学与技术学院"))
        self.comboBox_proj_prinsch.setItemText(26, _translate("MainWindow", "通信与电子工程学院"))
        self.comboBox_proj_prinsch.setItemText(27, _translate("MainWindow", "国际关系与地区发展研究院"))
        self.comboBox_proj_prinsch.setItemText(28, _translate("MainWindow", "河口海岸科学研究院"))
        self.comboBox_proj_prinsch.setItemText(29, _translate("MainWindow", "精密光谱科学与技术国家重点实验室"))
        self.comboBox_proj_prinsch.setItemText(30, _translate("MainWindow", "教育专业学位管理中心"))
        self.comboBox_proj_prinsch.setItemText(31, _translate("MainWindow", "教育学部"))
        self.comboBox_proj_prinsch.setItemText(32, _translate("MainWindow", "教育管理学系"))
        self.comboBox_proj_prinsch.setItemText(33, _translate("MainWindow", "经济与管理学部专业学位教育中心"))
        self.comboBox_proj_prinsch.setItemText(34, _translate("MainWindow", "经济学院"))
        self.comboBox_proj_prinsch.setItemText(35, _translate("MainWindow", "工商管理学院"))
        self.comboBox_proj_prinsch.setItemText(36, _translate("MainWindow", "公共管理学院"))
        self.comboBox_proj_prinsch.setItemText(37, _translate("MainWindow", "统计学院"))
        self.comboBox_proj_prinsch.setItemText(38, _translate("MainWindow", "软件工程学院"))
        self.comboBox_proj_prinsch.setItemText(39, _translate("MainWindow", "教师教育学院"))
        self.comboBox_proj_prinsch.setItemText(40, _translate("MainWindow", "数据科学与工程学院"))
        self.comboBox_proj_prinsch.setItemText(41, _translate("MainWindow", "亚欧商学院"))
        self.comboBox_proj_prinsch.setItemText(42, _translate("MainWindow", "教育心理学系"))
        self.comboBox_proj_prinsch.setItemText(43, _translate("MainWindow", "物理与电子科学学院电子科学系"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_projadd), _translate("MainWindow", "添加项目"))
        item = self.tableWidget_proj_payment.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "到款金额"))
        item = self.tableWidget_proj_payment.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "到款日期"))
        self.label_28.setText(_translate("MainWindow", "项目序号"))
        self.pushButton_proj_paysearch.setText(_translate("MainWindow", "搜索"))
        self.pushButton_proj_payadd.setText(_translate("MainWindow", "添加一行"))
        self.pushButton_proj_payxls.setText(_translate("MainWindow", "打印到xls"))
        self.pushButton_proj_paydel.setText(_translate("MainWindow", "删除该行"))
        self.pushButton_proj_paymod.setText(_translate("MainWindow", "更新修改"))
        self.pushButton_proj_payreflesh.setText(_translate("MainWindow", "刷新列表"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_payment), _translate("MainWindow", "到款信息"))
        item = self.tableWidget_proj_part.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "参与者姓名"))
        item = self.tableWidget_proj_part.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "参与者院系"))
        self.pushButton_proj_partadd.setText(_translate("MainWindow", "添加一行"))
        self.pushButton_proj_partxls.setText(_translate("MainWindow", "打印到xls"))
        self.label_37.setText(_translate("MainWindow", "项目序号"))
        self.pushButton_proj_partsearch.setText(_translate("MainWindow", "搜索"))
        self.pushButton_proj_partdel.setText(_translate("MainWindow", "删除该行"))
        self.pushButton_proj_partmod.setText(_translate("MainWindow", "更新修改"))
        self.pushButton_proj_partreflesh.setText(_translate("MainWindow", "刷新列表"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_participant), _translate("MainWindow", "参与者信息"))
        self.tabWidget_main.setTabText(self.tabWidget_main.indexOf(self.tab_proj), _translate("MainWindow", "横向项目管理"))
        item = self.tableWidget_paper.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "中文题名"))
        item = self.tableWidget_paper.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "论文类型"))
        item = self.tableWidget_paper.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "学科门类"))
        item = self.tableWidget_paper.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "完成日期"))
        item = self.tableWidget_paper.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "中文关键词"))
        item = self.tableWidget_paper.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "分类号"))
        item = self.tableWidget_paper.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "作者姓名"))
        item = self.tableWidget_paper.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "作者编号"))
        item = self.tableWidget_paper.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "作者院系"))
        item = self.tableWidget_paper.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "中文摘要"))
        self.pushButton_paper_xls.setText(_translate("MainWindow", "打印到xls"))
        self.pushButton_paper_del.setText(_translate("MainWindow", "删除该行"))
        self.pushButton_paper_mod.setText(_translate("MainWindow", "更新修改"))
        self.pushButton_paper_reflesh.setText(_translate("MainWindow", "刷新列表"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_paperview), _translate("MainWindow", "项目一览"))
        self.pushButton_paper_add.setText(_translate("MainWindow", "添加项目"))
        self.groupBox_9.setTitle(_translate("MainWindow", "作者情况"))
        self.label_50.setText(_translate("MainWindow", "作者姓名"))
        self.label_51.setText(_translate("MainWindow", "作者院系"))
        self.comboBox_paper_authsch.setItemText(0, _translate("MainWindow", "中国语言文学系"))
        self.comboBox_paper_authsch.setItemText(1, _translate("MainWindow", "历史学系"))
        self.comboBox_paper_authsch.setItemText(2, _translate("MainWindow", "哲学系"))
        self.comboBox_paper_authsch.setItemText(3, _translate("MainWindow", "政治学系"))
        self.comboBox_paper_authsch.setItemText(4, _translate("MainWindow", "法学院"))
        self.comboBox_paper_authsch.setItemText(5, _translate("MainWindow", "马克思主义学院"))
        self.comboBox_paper_authsch.setItemText(6, _translate("MainWindow", "社会发展学院"))
        self.comboBox_paper_authsch.setItemText(7, _translate("MainWindow", "外语学院"))
        self.comboBox_paper_authsch.setItemText(8, _translate("MainWindow", "国际汉语文化学院"))
        self.comboBox_paper_authsch.setItemText(9, _translate("MainWindow", "教育信息技术学系"))
        self.comboBox_paper_authsch.setItemText(10, _translate("MainWindow", "心理与认知科学学院"))
        self.comboBox_paper_authsch.setItemText(11, _translate("MainWindow", "特殊教育学系"))
        self.comboBox_paper_authsch.setItemText(12, _translate("MainWindow", "教育康复学系"))
        self.comboBox_paper_authsch.setItemText(13, _translate("MainWindow", "体育与健康学院"))
        self.comboBox_paper_authsch.setItemText(14, _translate("MainWindow", "传播学院"))
        self.comboBox_paper_authsch.setItemText(15, _translate("MainWindow", "美术学院"))
        self.comboBox_paper_authsch.setItemText(16, _translate("MainWindow", "音乐学院"))
        self.comboBox_paper_authsch.setItemText(17, _translate("MainWindow", "设计学院"))
        self.comboBox_paper_authsch.setItemText(18, _translate("MainWindow", "数学科学学院"))
        self.comboBox_paper_authsch.setItemText(19, _translate("MainWindow", "物理与电子科学学院"))
        self.comboBox_paper_authsch.setItemText(20, _translate("MainWindow", "化学与分子工程学院"))
        self.comboBox_paper_authsch.setItemText(21, _translate("MainWindow", "地理科学学院"))
        self.comboBox_paper_authsch.setItemText(22, _translate("MainWindow", "生态与环境科学学院"))
        self.comboBox_paper_authsch.setItemText(23, _translate("MainWindow", "城市与区域科学学院"))
        self.comboBox_paper_authsch.setItemText(24, _translate("MainWindow", "生命科学学院"))
        self.comboBox_paper_authsch.setItemText(25, _translate("MainWindow", "计算机科学与技术学院"))
        self.comboBox_paper_authsch.setItemText(26, _translate("MainWindow", "通信与电子工程学院"))
        self.comboBox_paper_authsch.setItemText(27, _translate("MainWindow", "国际关系与地区发展研究院"))
        self.comboBox_paper_authsch.setItemText(28, _translate("MainWindow", "河口海岸科学研究院"))
        self.comboBox_paper_authsch.setItemText(29, _translate("MainWindow", "精密光谱科学与技术国家重点实验室"))
        self.comboBox_paper_authsch.setItemText(30, _translate("MainWindow", "教育专业学位管理中心"))
        self.comboBox_paper_authsch.setItemText(31, _translate("MainWindow", "教育学部"))
        self.comboBox_paper_authsch.setItemText(32, _translate("MainWindow", "教育管理学系"))
        self.comboBox_paper_authsch.setItemText(33, _translate("MainWindow", "经济与管理学部专业学位教育中心"))
        self.comboBox_paper_authsch.setItemText(34, _translate("MainWindow", "经济学院"))
        self.comboBox_paper_authsch.setItemText(35, _translate("MainWindow", "工商管理学院"))
        self.comboBox_paper_authsch.setItemText(36, _translate("MainWindow", "公共管理学院"))
        self.comboBox_paper_authsch.setItemText(37, _translate("MainWindow", "统计学院"))
        self.comboBox_paper_authsch.setItemText(38, _translate("MainWindow", "软件工程学院"))
        self.comboBox_paper_authsch.setItemText(39, _translate("MainWindow", "教师教育学院"))
        self.comboBox_paper_authsch.setItemText(40, _translate("MainWindow", "数据科学与工程学院"))
        self.comboBox_paper_authsch.setItemText(41, _translate("MainWindow", "亚欧商学院"))
        self.comboBox_paper_authsch.setItemText(42, _translate("MainWindow", "教育心理学系"))
        self.comboBox_paper_authsch.setItemText(43, _translate("MainWindow", "物理与电子科学学院电子科学系"))
        self.label_64.setText(_translate("MainWindow", "作者编号"))
        self.label_71.setText(_translate("MainWindow", "中文摘要"))
        self.groupBox_19.setTitle(_translate("MainWindow", "基本信息"))
        self.label_26.setText(_translate("MainWindow", "中文题名"))
        self.label_65.setText(_translate("MainWindow", "完成日期"))
        self.label_73.setText(_translate("MainWindow", "学科门类"))
        self.label_120.setText(_translate("MainWindow", "论文类型"))
        self.label_27.setText(_translate("MainWindow", "分类号"))
        self.comboBox_paper_subj.setItemText(0, _translate("MainWindow", "哲学"))
        self.comboBox_paper_subj.setItemText(1, _translate("MainWindow", "经济学"))
        self.comboBox_paper_subj.setItemText(2, _translate("MainWindow", "法学"))
        self.comboBox_paper_subj.setItemText(3, _translate("MainWindow", "教育学"))
        self.comboBox_paper_subj.setItemText(4, _translate("MainWindow", "文学"))
        self.comboBox_paper_subj.setItemText(5, _translate("MainWindow", "历史学"))
        self.comboBox_paper_subj.setItemText(6, _translate("MainWindow", "理学"))
        self.comboBox_paper_subj.setItemText(7, _translate("MainWindow", "工学"))
        self.comboBox_paper_subj.setItemText(8, _translate("MainWindow", "农学"))
        self.comboBox_paper_subj.setItemText(9, _translate("MainWindow", "医学"))
        self.comboBox_paper_subj.setItemText(10, _translate("MainWindow", "军事学"))
        self.comboBox_paper_subj.setItemText(11, _translate("MainWindow", "管理学"))
        self.comboBox_paper_type.setItemText(0, _translate("MainWindow", "学士学位论文"))
        self.comboBox_paper_type.setItemText(1, _translate("MainWindow", "硕士学位论文"))
        self.comboBox_paper_type.setItemText(2, _translate("MainWindow", "博士学位论文"))
        self.comboBox_paper_type.setItemText(3, _translate("MainWindow", "科研论文"))
        self.label_66.setText(_translate("MainWindow", "中文关键词"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_paperadd), _translate("MainWindow", "添加论文"))
        self.tabWidget_main.setTabText(self.tabWidget_main.indexOf(self.tab_paper), _translate("MainWindow", "论文管理"))

        self.translate()

    def handle(self):
        self.readUsersInfo()
        self.pushButton_self_update.clicked.connect(self.modSelfInfo)
        self.pushButton_user_create.clicked.connect(self.createNewUser)
        self.pushButton_user_reflesh.clicked.connect(self.readUsersInfo)
        self.pushButton_user_del.clicked.connect(self.delUser)
        self.pushButton_user_xls.clicked.connect(self.xlsUser)
        self.pushButton_user_mod.clicked.connect(self.modUser)
        self.pushButton_proj_add.clicked.connect(self.addProj)
        self.readProjsInfo()
        self.pushButton_proj_xls.clicked.connect(self.xlsProj)
        self.pushButton_proj_del.clicked.connect(self.delProj)
        self.pushButton_proj_mod.clicked.connect(self.modProj)
        self.pushButton_proj_addpay.clicked.connect(self.addPayInfo)
        self.pushButton_proj_reflesh.clicked.connect(self.readProjsInfo)
        self.pushButton_proj_paysearch.clicked.connect(self.searchPayInfo)
        self.pushButton_proj_payreflesh.clicked.connect(self.refleshPayInfo)
        self.pushButton_proj_payadd.clicked.connect(self.addPay)
        self.pushButton_proj_paymod.clicked.connect(self.updatePay)
        self.pushButton_proj_paydel.clicked.connect(self.delPay)
        self.pushButton_proj_payxls.clicked.connect(self.xlsPay)
        self.pushButton_proj_addpar.clicked.connect(self.addPartInfo)
        self.pushButton_proj_partsearch.clicked.connect(self.searchPartInfo)
        self.pushButton_proj_partreflesh.clicked.connect(self.refleshPartInfo)
        self.pushButton_proj_partadd.clicked.connect(self.addPart)
        self.pushButton_proj_partmod.clicked.connect(self.updatePart)
        self.pushButton_proj_partdel.clicked.connect(self.delPart)
        self.pushButton_proj_partxls.clicked.connect(self.xlsPart)
        self.readPaperInfo()
        self.pushButton_paper_reflesh.clicked.connect(self.readPaperInfo)
        self.pushButton_paper_add.clicked.connect(self.addPaper)
        self.pushButton_paper_del.clicked.connect(self.delPaper)
        self.pushButton_paper_xls.clicked.connect(self.xlsPaper)
        self.pushButton_paper_mod.clicked.connect(self.modPaper)

    def translate(self):
        self.selfInfoCtrl()

    def readUsersInfo(self):
        if self.user.authority == 1:
            db = pymysql.connect("localhost", "root", "db120325", "test")
            cursor = db.cursor()
            sql = "select uname,password,authority from secuser"
            cursor.execute(sql)
            data = cursor.fetchall()
            x = 0
            self.userlist = []
            for i in data:
                self.tableWidget_users.setRowCount(x + 1)
                item = QtWidgets.QTableWidgetItem(str(data[x][0]))
                item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
                self.tableWidget_users.setItem(x, 0, item)
                self.tableWidget_users.setItem(x, 1, QtWidgets.QTableWidgetItem(str(data[x][1])))
                self.tableWidget_users.setItem(x, 2, QtWidgets.QTableWidgetItem(str(data[x][2])))
                self.userlist += [str(data[x][0]), str(data[x][1]), str(data[x][2])]
                x += 1

    def selfInfoCtrl(self):
        _translate = QtCore.QCoreApplication.translate
        self.lineEdit_self_name.setText(self.user.name)
        self.label_self_level.setText(_translate("MainWindow", str(self.user.authority)))
        self.label_self_username.setText(_translate("MainWindow", self.user.uname))
        self.lineEdit_self_password.setText(self.user.password)
        self.lineEdit_self_password_2.setText(self.user.password)
        if self.user.school != None:
            self.comboBox_self_school.setItemText(0, _translate("MainWindow", self.user.school))
        else:
            self.comboBox_self_school.setItemText(0, _translate("MainWindow", "null"))
        if self.user.position != None:
            self.comboBox_self_position.setItemText(0, _translate("MainWindow", self.user.position))
        else:
            self.comboBox_self_position.setItemText(0, _translate("MainWindow", "null"))

    def modSelfInfo(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        if self.lineEdit_self_password.text() == self.lineEdit_self_password_2.text() and self.lineEdit_self_password.text() != None:
            sql1 = "update secuser set password=\'" + self.lineEdit_self_password.text() + "\' where uname=\'" + self.user.uname + "\'"
            self.user.password = self.lineEdit_self_password.text()
        elif self.lineEdit_self_password.text() != self.lineEdit_self_password_2.text():
            QMessageBox.warning(self, "错误", "两次输入的密码不相同")
        if self.lineEdit_self_name != None:
            sql2 = "update secuser set name=\'" + self.lineEdit_self_name.text() + "\' where uname=\'" + self.user.uname + "\'"
            self.user.name = self.lineEdit_self_name.text()
        if self.comboBox_self_school.currentText() != "null":
            sql3 = "update secuser set school=\'" + self.comboBox_self_school.currentText() + "\' where uname=\'" + self.user.uname + "\'"
            self.user.name = self.comboBox_self_school.currentText()
        if self.comboBox_self_position.currentText() != "null":
            sql4 = "update secuser set position=\'" + self.comboBox_self_position.currentText() + "\' where uname=\'" + self.user.uname + "\'"
            self.user.name = self.comboBox_self_position.currentText()
        try:
            if (sql1 != None):
                cursor.execute(sql1)
            if (sql2 != None):
                cursor.execute(sql2)
            if (sql3 != None):
                cursor.execute(sql3)
            if (sql4 != None):
                cursor.execute(sql4)
            db.commit()
        except:
            db.rollback()
            QMessageBox.warning(self, "错误", "修改失败")
        else:
            QMessageBox.warning(self, "成功", "修改成功")
            self.readUsersInfo()

    def createNewUser(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        if self.lineEdit_user_password.text() == self.lineEdit_user_password_2.text() and self.lineEdit_user_password.text() != None and self.lineEdit_user_username.text() != None:
            sql = "insert into secuser(uname,password,authority) values (\'" + self.lineEdit_user_username.text() + "\',\'" + self.lineEdit_user_password.text() + "\',\'" + str(
                self.comboBox_user_authority.currentIndex()) + "\')"
            try:
                cursor.execute(sql)
                db.commit()
            except:
                db.rollback()
                QMessageBox.warning(self, "错误", "创建用户时出现错误")
            else:
                QMessageBox.about(self, "成功", "创建成功")
                self.readUsersInfo()
        elif self.lineEdit_user_password.text() != self.lineEdit_user_password_2.text():
            QMessageBox.warning(self, "错误", "两次输入的密码不一致")

    def delUser(self):
        if self.user.authority == 1:
            db = pymysql.connect("localhost", "root", "db120325", "test")
            cursor = db.cursor()
            sql = "delete from secuser where uname=\'" + self.tableWidget_users.item(
                self.tableWidget_users.currentIndex().row(), 0).text() + "\'"
            try:
                cursor.execute(sql)
                db.commit()
            except:
                db.rollback()
                QMessageBox.warning(self, "错误", "删除用户时出现错误")
            else:
                QMessageBox.about(self, "成功", "删除成功")
                self.readUsersInfo()

    def xlsUser(self):
        if self.user.authority == 1:
            wb = Workbook('user.xlsx')
            sheet = wb.add_worksheet()
            sheet.write(0, 0, '用户名')
            sheet.write(0, 1, '密码')
            sheet.write(0, 2, '权限等级')
            for row in range(0, self.tableWidget_users.rowCount()):
                for col in range(0, self.tableWidget_users.columnCount()):
                    sheet.write(row + 1, col, self.tableWidget_users.item(row, col).text())
            wb.close()
            QMessageBox.about(self, "成功", "已导出到user.xlsx")

    def modUser(self):
        if self.user.authority == 1:
            flag = 0
            db = pymysql.connect("localhost", "root", "db120325", "test")
            cursor = db.cursor()
            for row in range(0, self.tableWidget_users.rowCount()):
                for col in range(1, self.tableWidget_users.columnCount()):
                    if self.userlist[3 * row + col] != self.tableWidget_users.item(row, col).text() and col == 1:
                        sql = "update secuser set password=\'" + self.tableWidget_users.item(row,
                                                                                             col).text() + "\' where uname=\'" + \
                              self.userlist[3 * row] + "\'"
                        try:
                            cursor.execute(sql)
                            db.commit()
                        except:
                            db.rollback()
                            flag = 1
                    elif self.userlist[3 * row + col] != self.tableWidget_users.item(row, col).text() and col == 2:
                        sql = "update secuser set authority=\'" + self.tableWidget_users.item(row,
                                                                                              col).text() + "\' where uname=\'" + \
                              self.userlist[3 * row] + "\'"
                        try:
                            cursor.execute(sql)
                            db.commit()
                        except:
                            db.rollback()
                            flag = 1
            if flag == 0:
                QMessageBox.about(self, "成功", "修改成功")
                self.readUsersInfo()
            else:
                QMessageBox.warning(self, "错误", "修改信息时出现错误")

    def addProj(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "insert into secproj(pname,pid,ptype,pfund,pstart,pend,cdept,cid,cfund,efund,cstart,cend,principal,prid,prdept,pintro,pcomp) values ("
        sql += "\'" + self.lineEdit_proj_name.text() + "\',"
        sql += "\'" + self.lineEdit_proj_id.text() + "\',"
        sql += "\'" + self.comboBox_proj_type.currentText() + "\',"
        sql += "\'" + self.lineEdit_proj_fund.text() + "\',"
        sql += "\'" + self.dateEdit_proj_start.text() + "\',"
        sql += "\'" + self.dateEdit_proj_end.text() + "\',"
        sql += "\'" + self.lineEdit_proj_contdep.text() + "\',"
        sql += "\'" + self.lineEdit_proj_contid.text() + "\',"
        sql += "\'" + self.lineEdit_proj_contfund.text() + "\',"
        sql += "\'" + self.lineEdit_proj_equipfund.text() + "\',"
        sql += "\'" + self.dateEdit_proj_contstart.text() + "\',"
        sql += "\'" + self.dateEdit_proj_contend.text() + "\',"
        sql += "\'" + self.lineEdit_proj_prinname.text() + "\',"
        sql += "\'" + self.lineEdit_proj_prinid.text() + "\',"
        sql += "\'" + self.comboBox_proj_prinsch.currentText() + "\',"
        sql += "\'" + self.textEdit_proj_intro.toPlainText() + "\',"
        sql += "\'" + self.textEdit_proj_happen.toPlainText() + "\')"
        try:
            cursor.execute(sql)
            db.commit()
        except:
            db.rollback()
            QMessageBox.warning(self, "错误", "创建时出现错误")
        else:
            QMessageBox.about(self, "成功", "创建成功")
            self.readProjsInfo()

    def readProjsInfo(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select pname,pid,ptype,pfund,pstart,pend,cdept,cid,cfund,efund,cstart,cend,principal,prid,prdept,pintro,pcomp from secproj"
        cursor.execute(sql)
        data = cursor.fetchall()
        x = 0
        self.projlist = []
        for i in data:
            self.tableWidget_proj.setRowCount(x + 1)
            self.tableWidget_proj.setItem(x, 0, QtWidgets.QTableWidgetItem(str(data[x][0])))
            item = QtWidgets.QTableWidgetItem(str(data[x][1]))
            item.setFlags(QtCore.Qt.ItemIsSelectable | QtCore.Qt.ItemIsEnabled)
            self.tableWidget_proj.setItem(x, 1, item)
            self.tableWidget_proj.setItem(x, 2, QtWidgets.QTableWidgetItem(str(data[x][2])))
            self.tableWidget_proj.setItem(x, 3, QtWidgets.QTableWidgetItem(str(data[x][3])))
            self.tableWidget_proj.setItem(x, 4, QtWidgets.QTableWidgetItem(str(data[x][4])))
            self.tableWidget_proj.setItem(x, 5, QtWidgets.QTableWidgetItem(str(data[x][5])))
            self.tableWidget_proj.setItem(x, 6, QtWidgets.QTableWidgetItem(str(data[x][6])))
            self.tableWidget_proj.setItem(x, 7, QtWidgets.QTableWidgetItem(str(data[x][7])))
            self.tableWidget_proj.setItem(x, 8, QtWidgets.QTableWidgetItem(str(data[x][8])))
            self.tableWidget_proj.setItem(x, 9, QtWidgets.QTableWidgetItem(str(data[x][9])))
            self.tableWidget_proj.setItem(x, 10, QtWidgets.QTableWidgetItem(str(data[x][10])))
            self.tableWidget_proj.setItem(x, 11, QtWidgets.QTableWidgetItem(str(data[x][11])))
            self.tableWidget_proj.setItem(x, 12, QtWidgets.QTableWidgetItem(str(data[x][12])))
            self.tableWidget_proj.setItem(x, 13, QtWidgets.QTableWidgetItem(str(data[x][13])))
            self.tableWidget_proj.setItem(x, 14, QtWidgets.QTableWidgetItem(str(data[x][14])))
            self.tableWidget_proj.setItem(x, 15, QtWidgets.QTableWidgetItem(str(data[x][15])))
            self.tableWidget_proj.setItem(x, 16, QtWidgets.QTableWidgetItem(str(data[x][16])))
            self.projlist += [str(data[x][0]), str(data[x][1]), str(data[x][2]), str(data[x][3]), str(data[x][4]),
                              str(data[x][5]), str(data[x][6]), str(data[x][7]), str(data[x][8]), str(data[x][9]),
                              str(data[x][10]), str(data[x][11]), str(data[x][12]), str(data[x][13]),
                              str(data[x][14]), str(data[x][15]), str(data[x][16])]
            x += 1

    def xlsProj(self):
        wb = Workbook('proj.xlsx')
        sheet = wb.add_worksheet()
        sheet.write(0, 0, '项目名称')
        sheet.write(0, 1, '项目序号')
        sheet.write(0, 2, '项目类型')
        sheet.write(0, 3, '项目经费')
        sheet.write(0, 4, '项目开始年月')
        sheet.write(0, 5, '项目截止年月')
        sheet.write(0, 6, '委托单位')
        sheet.write(0, 7, '合同编号')
        sheet.write(0, 8, '合同经费')
        sheet.write(0, 9, '设备经费')
        sheet.write(0, 10, '合同开始年月')
        sheet.write(0, 11, '合同截止年月')
        sheet.write(0, 12, '负责人姓名')
        sheet.write(0, 13, '负责人编号')
        sheet.write(0, 14, '负责人部门')
        sheet.write(0, 15, '项目简介')
        sheet.write(0, 16, '项目完成情况简介')
        for row in range(0, self.tableWidget_proj.rowCount()):
            for col in range(0, self.tableWidget_proj.columnCount()):
                sheet.write(row + 1, col, self.tableWidget_proj.item(row, col).text())
        wb.close()
        QMessageBox.about(self, "成功", "已导出到proj.xlsx")

    def delProj(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "delete from secproj where pid=\'" + self.tableWidget_proj.item(
            self.tableWidget_proj.currentIndex().row(), 1).text() + "\'"
        try:
            cursor.execute(sql)
            db.commit()
        except:
            db.rollback()
            QMessageBox.warning(self, "错误", "删除项目时出现错误")
        else:
            QMessageBox.about(self, "成功", "删除成功")
            self.readProjsInfo()

    def modProj(self):
        flag = 0
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        for row in range(0, self.tableWidget_proj.rowCount()):
            for col in range(0, self.tableWidget_proj.columnCount()):
                if self.projlist[16 * row + col] != self.tableWidget_proj.item(row, col).text():
                    if col == 0:
                        sql = "update secproj set pname=\'" + self.tableWidget_proj.item(row,
                                                                                         col).text() + "\' where pid=\'" + \
                              self.projlist[3 * row + 1] + "\'"
                    elif col == 2:
                        sql = "update secproj set ptype=\'" + self.tableWidget_proj.item(row,
                                                                                         col).text() + "\' where pid=\'" + \
                              self.projlist[3 * row + 1] + "\'"
                    elif col == 3:
                        sql = "update secproj set pfund=\'" + self.tableWidget_proj.item(row,
                                                                                         col).text() + "\' where pid=\'" + \
                              self.projlist[3 * row + 1] + "\'"
                    elif col == 4:
                        sql = "update secproj set pstart=\'" + self.tableWidget_proj.item(row,
                                                                                          col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 5:
                        sql = "update secproj set pend=\'" + self.tableWidget_proj.item(row,
                                                                                        col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 6:
                        sql = "update secproj set cdept=\'" + self.tableWidget_proj.item(row,
                                                                                         col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 7:
                        sql = "update secproj set cid=\'" + self.tableWidget_proj.item(row,
                                                                                       col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 8:
                        sql = "update secproj set cfund=\'" + self.tableWidget_proj.item(row,
                                                                                         col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 9:
                        sql = "update secproj set efund=\'" + self.tableWidget_proj.item(row,
                                                                                         col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 10:
                        sql = "update secproj set cstart=\'" + self.tableWidget_proj.item(row,
                                                                                          col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 11:
                        sql = "update secproj set cend=\'" + self.tableWidget_proj.item(row,
                                                                                        col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 12:
                        sql = "update secproj set principal=\'" + self.tableWidget_proj.item(row,
                                                                                             col).text() + "\' where pid=\'" + \
                              self.projlist[3 * row + 1] + "\'"
                    elif col == 13:
                        sql = "update secproj set prid=\'" + self.tableWidget_proj.item(row,
                                                                                        col).text() + "\' where pid=\'" + \
                              self.projlist[3 * row + 1] + "\'"
                    elif col == 14:
                        sql = "update secproj set prdept=\'" + self.tableWidget_proj.item(row,
                                                                                          col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 15:
                        sql = "update secproj set pintro=\'" + self.tableWidget_proj.item(row,
                                                                                          col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    elif col == 16:
                        sql = "update secproj set pcomp=\'" + self.tableWidget_proj.item(row,
                                                                                         col).text() + "\' where pid=\'" + self.projlist[3 * row + 1] + "\'"
                    try:
                        cursor.execute(sql)
                        db.commit()
                    except:
                        db.rollback()
                        flag = 1
        if flag == 0:
            QMessageBox.about(self, "成功", "修改成功")
            self.readProjsInfo()
        else:
            QMessageBox.warning(self, "错误", "修改信息时出现错误")

    def readPayInfo(self, pid):
        self.tableWidget_proj_payment.setRowCount(0)
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select id,pay,pdate from secpay where pid=\'" + pid + "\'"
        cursor.execute(sql)
        data = cursor.fetchall()
        x = 0
        self.paylist = []
        for i in data:
            self.tableWidget_proj_payment.setRowCount(x + 1)
            self.tableWidget_proj_payment.setItem(x, 0, QtWidgets.QTableWidgetItem(str(data[x][1])))
            self.tableWidget_proj_payment.setItem(x, 1, QtWidgets.QTableWidgetItem(str(data[x][2])))
            self.paylist += [str(data[x][0]), str(data[x][1]), str(data[x][2])]
            x += 1

    def addPayInfo(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select * from secproj where pid=\'" + self.lineEdit_proj_id.text() + "\'"
        cursor.execute(sql)
        data = cursor.fetchall()
        if len(data) == 0:
            QMessageBox.warning(self, "", "请先提交信息")
        else:
            self.tabWidget_4.setCurrentIndex(2)
            self.readPayInfo(self.lineEdit_proj_id.text())
            self.lineEdit_proj_idpay.setText(self.lineEdit_proj_id.text())

    def searchPayInfo(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select * from secproj where pid=\'" + self.lineEdit_proj_idpay.text() + "\'"
        cursor.execute(sql)
        data = cursor.fetchall()
        if len(data) == 0:
            QMessageBox.warning(self, "", "没有查询到，请检查输入信息是否正确")
        else:
            self.readPayInfo(self.lineEdit_proj_idpay.text())

    def refleshPayInfo(self):
        self.tableWidget_proj_payment.setRowCount(0)
        self.readPayInfo(self.lineEdit_proj_idpay.text())

    def addPay(self):
        if self.lineEdit_proj_idpay.text() != None and self.lineEdit_proj_idpay.text() != "":
            self.tableWidget_proj_payment.setRowCount(self.tableWidget_proj_payment.rowCount() + 1)
            self.tableWidget_proj_payment.setItem(self.tableWidget_proj_payment.rowCount() + 1, 0,
                                                  QtWidgets.QTableWidgetItem())
            self.tableWidget_proj_payment.setItem(self.tableWidget_proj_payment.rowCount() + 1, 1,
                                                  QtWidgets.QTableWidgetItem())

    def updatePay(self):
        if self.lineEdit_proj_idpay.text() != None and self.lineEdit_proj_idpay.text() != "":
            flag = 0
            db = pymysql.connect("localhost", "root", "db120325", "test")
            cursor = db.cursor()
            for row in range(0, self.tableWidget_proj_payment.rowCount()):
                if row < len(self.paylist) / 3:
                    for col in range(0, self.tableWidget_proj_payment.columnCount()):
                        if self.paylist[3 * row + col + 1] != self.tableWidget_proj_payment.item(row,
                                                                                                 col).text() and col == 0:
                            sql = "update secpay set pay=\'" + self.tableWidget_proj_payment.item(row,
                                                                                                  col).text() + "\' where id=\'" + \
                                  self.paylist[3 * row] + "\'"
                            try:
                                cursor.execute(sql)
                                db.commit()
                            except:
                                db.rollback()
                                flag = 1
                        elif self.paylist[3 * row + col + 1] != self.tableWidget_proj_payment.item(row,
                                                                                                   col).text() and col == 1:
                            sql = "update secpay set pdate=\'" + self.tableWidget_proj_payment.item(row,
                                                                                                    col).text() + "\' where id=\'" + \
                                  self.paylist[3 * row] + "\'"
                            try:
                                cursor.execute(sql)
                                db.commit()
                            except:
                                db.rollback()
                                flag = 1
                elif self.tableWidget_proj_payment.item(row, 0).text() != "" or self.tableWidget_proj_payment.item(row,
                                                                                                                   1).text() != "":
                    sql = "insert into secpay(pay,pdate,pid) values (\'" + self.tableWidget_proj_payment.item(row,
                                                                                                              0).text() + "\',\'" + self.tableWidget_proj_payment.item(
                        row, 1).text() + "\',\'" + self.lineEdit_proj_idpay.text() + "\')"
                    try:
                        cursor.execute(sql)
                        db.commit()
                    except:
                        db.rollback()
                        flag = 1
            if flag == 0:
                QMessageBox.about(self, "成功", "修改成功")
                self.readPayInfo(self.lineEdit_proj_idpay.text())
            else:
                QMessageBox.warning(self, "错误", "修改信息时出现错误")

    def delPay(self):
        if self.tableWidget_proj_payment.currentItem()!=None:
            db = pymysql.connect("localhost", "root", "db120325", "test")
            cursor = db.cursor()
            sql = "delete from secpay where id=\'" + self.paylist[3 * self.tableWidget_proj_payment.currentRow()] + "\'"
            try:
                cursor.execute(sql)
                db.commit()
            except:
                db.rollback()
                QMessageBox.warning(self, "错误", "删除时出现错误")
            else:
                QMessageBox.about(self, "成功", "删除成功")
                self.readPayInfo(self.lineEdit_proj_idpay.text())
        else:
            self.tableWidget_proj_payment.removeRow(self.tableWidget_proj_payment.currentRow())

    def xlsPay(self):
        wb = Workbook('pay' + self.lineEdit_proj_idpay.text() + '.xlsx')
        sheet = wb.add_worksheet()
        sheet.write(0, 0, '到款金额')
        sheet.write(0, 1, '到款日期')
        for row in range(0, self.tableWidget_proj_payment.rowCount()):
            for col in range(0, self.tableWidget_proj_payment.columnCount()):
                sheet.write(row + 1, col, self.tableWidget_proj_payment.item(row, col).text())
        wb.close()
        QMessageBox.about(self, "成功", "已导出到pay" + self.lineEdit_proj_idpay.text() + ".xlsx")

    def readPartInfo(self, pid):
        self.tableWidget_proj_part.setRowCount(0)
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select id,pname,pdept from secpart where pid=\'" + pid + "\'"
        cursor.execute(sql)
        data = cursor.fetchall()
        x = 0
        self.partlist = []
        for i in data:
            self.tableWidget_proj_part.setRowCount(x + 1)
            self.tableWidget_proj_part.setItem(x, 0, QtWidgets.QTableWidgetItem(str(data[x][1])))
            self.tableWidget_proj_part.setItem(x, 1, QtWidgets.QTableWidgetItem(str(data[x][2])))
            self.partlist += [str(data[x][0]), str(data[x][1]), str(data[x][2])]
            x += 1

    def addPartInfo(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select * from secproj where pid=\'" + self.lineEdit_proj_id.text() + "\'"
        cursor.execute(sql)
        data = cursor.fetchall()
        if len(data) == 0:
            QMessageBox.warning(self, "", "请先提交信息")
        else:
            self.tabWidget_4.setCurrentIndex(3)
            self.readPartInfo(self.lineEdit_proj_id.text())
            self.lineEdit_proj_idpart.setText(self.lineEdit_proj_id.text())

    def searchPartInfo(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select * from secproj where pid=\'" + self.lineEdit_proj_idpart.text() + "\'"
        cursor.execute(sql)
        data = cursor.fetchall()
        if len(data) == 0:
            QMessageBox.warning(self, "", "没有查询到，请检查输入信息是否正确")
        else:
            self.readPartInfo(self.lineEdit_proj_idpart.text())

    def refleshPartInfo(self):
        self.tableWidget_proj_part.setRowCount(0)
        self.readPartInfo(self.lineEdit_proj_idpart.text())

    def addPart(self):
        if self.lineEdit_proj_idpart.text() != None and self.lineEdit_proj_idpart.text() != "":
            self.tableWidget_proj_part.setRowCount(self.tableWidget_proj_part.rowCount() + 1)
            self.tableWidget_proj_part.setItem(self.tableWidget_proj_part.rowCount() + 1, 0,
                                               QtWidgets.QTableWidgetItem())
            self.tableWidget_proj_part.setItem(self.tableWidget_proj_part.rowCount() + 1, 1,
                                               QtWidgets.QTableWidgetItem())

    def updatePart(self):
        if self.lineEdit_proj_idpart.text() != None and self.lineEdit_proj_idpart.text() != "":
            flag = 0
            db = pymysql.connect("localhost", "root", "db120325", "test")
            cursor = db.cursor()
            for row in range(0, self.tableWidget_proj_part.rowCount()):
                if row < len(self.partlist) / 3:
                    for col in range(0, self.tableWidget_proj_part.columnCount()):
                        if self.partlist[3 * row + col + 1] != self.tableWidget_proj_part.item(row,
                                                                                               col).text() and col == 0:
                            sql = "update secpart set pname=\'" + self.tableWidget_proj_part.item(row,
                                                                                                  col).text() + "\' where id=\'" + \
                                  self.partlist[3 * row] + "\'"
                            try:
                                cursor.execute(sql)
                                db.commit()
                            except:
                                db.rollback()
                                flag = 1
                        elif self.partlist[3 * row + col + 1] != self.tableWidget_proj_part.item(row,
                                                                                                 col).text() and col == 1:
                            sql = "update secpart set pdept=\'" + self.tableWidget_proj_part.item(row,
                                                                                                  col).text() + "\' where id=\'" + \
                                  self.partlist[3 * row] + "\'"
                            try:
                                cursor.execute(sql)
                                db.commit()
                            except:
                                db.rollback()
                                flag = 1
                elif self.tableWidget_proj_part.item(row, 0).text() != "" and self.tableWidget_proj_part.item(row,
                                                                                                              1).text() != "":
                    sql = "insert into secpart(pname,pdept,pid) values (\'" + self.tableWidget_proj_part.item(row,
                                                                                                              0).text() + "\',\'" + self.tableWidget_proj_part.item(
                        row, 1).text() + "\',\'" + self.lineEdit_proj_idpart.text() + "\')"
                    try:
                        cursor.execute(sql)
                        db.commit()
                    except:
                        db.rollback()
                        flag = 1
            if flag == 0:
                QMessageBox.about(self, "成功", "修改成功")
                self.readPartInfo(self.lineEdit_proj_idpart.text())
            else:
                QMessageBox.warning(self, "错误", "修改信息时出现错误")

    def delPart(self):
        if self.tableWidget_proj_part.currentItem()!=None:
            db = pymysql.connect("localhost", "root", "db120325", "test")
            cursor = db.cursor()
            sql = "delete from secpart where id=\'" + self.partlist[3 * self.tableWidget_proj_part.currentRow()] + "\'"
            try:
                cursor.execute(sql)
                db.commit()
            except:
                db.rollback()
                QMessageBox.warning(self, "错误", "删除时出现错误")
            else:
                QMessageBox.about(self, "成功", "删除成功")
                self.readPartInfo(self.lineEdit_proj_idpart.text())
        else:
            self.tableWidget_proj_part.removeRow(self.tableWidget_proj_part.currentRow())

    def xlsPart(self):
        wb = Workbook('part' + self.lineEdit_proj_idpart.text() + '.xlsx')
        sheet = wb.add_worksheet()
        sheet.write(0, 0, '参与者姓名')
        sheet.write(0, 1, '参与者院系')
        for row in range(0, self.tableWidget_proj_part.rowCount()):
            for col in range(0, self.tableWidget_proj_part.columnCount()):
                sheet.write(row + 1, col, self.tableWidget_proj_part.item(row, col).text())
        wb.close()
        QMessageBox.about(self, "成功", "已导出到part" + self.lineEdit_proj_idpart.text() + ".xlsx")

    def addPaper(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "insert into secpaper(pname,ptype,psubj,pfin,pkey,pclass,author,aid,adept,summary) values ("
        sql += "\'" + self.lineEdit_paper_title.text() + "\',"
        sql += "\'" + self.comboBox_paper_type.currentText() + "\',"
        sql += "\'" + self.comboBox_paper_subj.currentText() + "\',"
        sql += "\'" + self.dateEdit_paper_fin.text() + "\',"
        sql += "\'" + self.lineEdit_paper_key.text() + "\',"
        sql += "\'" + self.lineEdit_paper_typeid.text() + "\',"
        sql += "\'" + self.lineEdit_paper_authname.text() + "\',"
        sql += "\'" + self.lineEdit_paper_authid.text() + "\',"
        sql += "\'" + self.comboBox_paper_authsch.currentText() + "\',"
        sql += "\'" + self.textEdit_paper_summary.toPlainText() + "\')"
        try:
            cursor.execute(sql)
            db.commit()
        except:
            db.rollback()
            QMessageBox.warning(self, "错误", "创建时出现错误")
        else:
            QMessageBox.about(self, "成功", "创建成功")
            self.readPaperInfo()

    def readPaperInfo(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "select id,pname,ptype,psubj,pfin,pkey,pclass,author,aid,adept,summary from secpaper"
        cursor.execute(sql)
        data = cursor.fetchall()
        x = 0
        self.paperlist = []
        for i in data:
            self.tableWidget_paper.setRowCount(x + 1)
            self.tableWidget_paper.setItem(x, 0, QtWidgets.QTableWidgetItem(str(data[x][1])))
            self.tableWidget_paper.setItem(x, 1, QtWidgets.QTableWidgetItem(str(data[x][2])))
            self.tableWidget_paper.setItem(x, 2, QtWidgets.QTableWidgetItem(str(data[x][3])))
            self.tableWidget_paper.setItem(x, 3, QtWidgets.QTableWidgetItem(str(data[x][4])))
            self.tableWidget_paper.setItem(x, 4, QtWidgets.QTableWidgetItem(str(data[x][5])))
            self.tableWidget_paper.setItem(x, 5, QtWidgets.QTableWidgetItem(str(data[x][6])))
            self.tableWidget_paper.setItem(x, 6, QtWidgets.QTableWidgetItem(str(data[x][7])))
            self.tableWidget_paper.setItem(x, 7, QtWidgets.QTableWidgetItem(str(data[x][8])))
            self.tableWidget_paper.setItem(x, 8, QtWidgets.QTableWidgetItem(str(data[x][9])))
            self.tableWidget_paper.setItem(x, 9, QtWidgets.QTableWidgetItem(str(data[x][10])))
            self.paperlist += [str(data[x][0]), str(data[x][1]), str(data[x][2]), str(data[x][3]), str(data[x][4]),
                              str(data[x][5]), str(data[x][6]), str(data[x][7]), str(data[x][8]), str(data[x][9]), str(data[x][10])]
            x += 1

    def delPaper(self):
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        sql = "delete from secpaper where id=\'" + self.partlist[11 * self.tableWidget_paper.currentRow()] + "\'"
        try:
            cursor.execute(sql)
            db.commit()
        except:
            db.rollback()
            QMessageBox.warning(self, "错误", "删除用户时出现错误")
        else:
            QMessageBox.about(self, "成功", "删除成功")
            self.readPaperInfo()
            
    def modPaper(self):
        #pname,ptype,psubj,pfin,ckey,cclass,author,aid,adept,summary
        flag = 0
        db = pymysql.connect("localhost", "root", "db120325", "test")
        cursor = db.cursor()
        for row in range(0, self.tableWidget_paper.rowCount()):
            for col in range(0, self.tableWidget_paper.columnCount()):
                if self.paperlist[16 * row + col + 1] != self.tableWidget_paper.item(row, col).text():
                    if col == 0:
                        sql = "update secpaper set pname=\'" + self.tableWidget_paper.item(row,
                                                                                         col).text() + "\' where id=\'" + \
                              self.paperlist[11 * row ] + "\'"
                    elif col == 1:
                        sql = "update secpaper set ptype=\'" + self.tableWidget_paper.item(row,
                                                                                         col).text() + "\' where id=\'" + \
                              self.paperlist[11 * row ] + "\'"
                    elif col == 2:
                        sql = "update secpaper set psubj=\'" + self.tableWidget_paper.item(row,
                                                                                         col).text() + "\' where id=\'" + \
                              self.paperlist[11 * row ] + "\'"
                    elif col == 3:
                        sql = "update secpaper set pfin=\'" + self.tableWidget_paper.item(row,
                                                                                          col).text() + "\' where id=\'" + self.paperlist[11 * row ] + "\'"
                    elif col == 4:
                        sql = "update secpaper set pkey=\'" + self.tableWidget_paper.item(row,
                                                                                        col).text() + "\' where id=\'" + self.paperlist[11 * row ] + "\'"
                    elif col == 5:
                        sql = "update secpaper set pclass=\'" + self.tableWidget_paper.item(row,
                                                                                         col).text() + "\' where id=\'" + self.paperlist[11 * row ] + "\'"
                    elif col == 6:
                        sql = "update secpaper set author=\'" + self.tableWidget_paper.item(row,
                                                                                       col).text() + "\' where id=\'" + self.paperlist[11 * row ] + "\'"
                    elif col == 7:
                        sql = "update secpaper set aid=\'" + self.tableWidget_paper.item(row,
                                                                                         col).text() + "\' where id=\'" + self.paperlist[11 * row ] + "\'"
                    elif col == 8:
                        sql = "update secpaper set adept=\'" + self.tableWidget_paper.item(row,
                                                                                         col).text() + "\' where id=\'" + self.paperlist[11 * row ] + "\'"
                    elif col == 9:
                        sql = "update secpaper set summary=\'" + self.tableWidget_paper.item(row,
                                                                                         col).text() + "\' where id=\'" + self.paperlist[11 * row ] + "\'"
                    try:
                        cursor.execute(sql)
                        db.commit()
                    except:
                        db.rollback()
                        flag = 1
        if flag == 0:
            QMessageBox.about(self, "成功", "修改成功")
            self.readPaperInfo()
        else:
            QMessageBox.warning(self, "错误", "修改信息时出现错误")

    def xlsPaper(self):
        wb = Workbook('paper.xlsx')
        sheet = wb.add_worksheet()
        sheet.write(0, 0, '中文题名')
        sheet.write(0, 1, '论文类型')
        sheet.write(0, 2, '学科门类')
        sheet.write(0, 3, '完成日期')
        sheet.write(0, 4, '中文关键词')
        sheet.write(0, 5, '分类号')
        sheet.write(0, 6, '作者姓名')
        sheet.write(0, 7, '作者编号')
        sheet.write(0, 8, '作者院系')
        sheet.write(0, 9, '中文摘要')
        for row in range(0, self.tableWidget_paper.rowCount()):
            for col in range(0, self.tableWidget_paper.columnCount()):
                sheet.write(row + 1, col, self.tableWidget_paper.item(row, col).text())
        wb.close()
        QMessageBox.about(self, "成功", "已导出到paper.xlsx")
import icons_rc
